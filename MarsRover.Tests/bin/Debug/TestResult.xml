<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="E:\Projects\MarsRover\MarsRover.Tests\bin\Debug\MarsRover.Tests.dll" total="28" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2011-05-10" time="22:47:17">
  <environment nunit-version="2.5.9.10348" clr-version="2.0.50727.4959" os-version="Microsoft Windows NT 6.1.7600.0" platform="Win32NT" cwd="C:\Program Files\NUnit 2.5.9\bin\net-2.0" machine-name="JAMMYDODGER" user="Nick" user-domain="JammyDodger" />
  <culture-info current-culture="en-GB" current-uiculture="en-US" />
  <test-suite type="Assembly" name="E:\Projects\MarsRover\MarsRover.Tests\bin\Debug\MarsRover.Tests.dll" executed="True" result="Success" success="True" time="0.591" asserts="0">
    <results>
      <test-suite type="Namespace" name="MarsRover" executed="True" result="Success" success="True" time="0.577" asserts="0">
        <results>
          <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="0.573" asserts="0">
            <results>
              <test-suite type="TestFixture" name="given_a_rover_facing_west_at_x_2_and_y_3" executed="True" result="Success" success="True" time="0.022" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.given_a_rover_facing_west_at_x_2_and_y_3.rover_has_an_id" executed="True" result="Success" success="True" time="0.021" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="when_adding_rover_to_plateau_controller" executed="True" result="Success" success="True" time="0.027" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.when_adding_rover_to_plateau_controller.check_position_is_called" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="MarsRover.Tests.when_adding_rover_to_plateau_controller.rover_instruction_is_executed" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                  <test-case name="MarsRover.Tests.when_adding_rover_to_plateau_controller.rover_is_added_to_collection" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="when_asked_for_output_position_text" executed="True" result="Success" success="True" time="0.020" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.when_asked_for_output_position_text.given_a_rover_facing_west_at_x_2_and_y_3.rover_has_an_id" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="MarsRover.Tests.when_asked_for_output_position_text.rover_output_text_is_correct" executed="True" result="Success" success="True" time="0.003" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="when_comparing_to_rover_of_same_id" executed="True" result="Success" success="True" time="0.029" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.when_comparing_to_rover_of_same_id.given_a_rover_facing_west_at_x_2_and_y_3.rover_has_an_id" executed="True" result="Success" success="True" time="0.018" asserts="1" />
                  <test-case name="MarsRover.Tests.when_comparing_to_rover_of_same_id.rovers_are_equal" executed="True" result="Success" success="True" time="0.010" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="when_executing_rover_collision_check_given_two_rovers_with_same_coordinates" executed="True" result="Success" success="True" time="0.036" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.when_executing_rover_collision_check_given_two_rovers_with_same_coordinates.an_exception_is_thrown" executed="True" result="Success" success="True" time="0.034" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="when_executing_rover_collision_check_given_two_rovers_with_same_coordinates_and_same_id" executed="True" result="Success" success="True" time="0.031" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.when_executing_rover_collision_check_given_two_rovers_with_same_coordinates_and_same_id.no_exception_is_thrown" executed="True" result="Success" success="True" time="0.023" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="when_executing_rover_position_check_given_a_rover_outside_platea_X_dimension" executed="True" result="Success" success="True" time="0.009" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.when_executing_rover_position_check_given_a_rover_outside_platea_X_dimension.an_exception_is_thrown" executed="True" result="Success" success="True" time="0.007" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="when_executing_rover_position_check_given_a_rover_outside_platea_Y_dimension" executed="True" result="Success" success="True" time="0.010" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.when_executing_rover_position_check_given_a_rover_outside_platea_Y_dimension.an_exception_is_thrown" executed="True" result="Success" success="True" time="0.008" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="when_getting_a_plateau_given_user_input_with_correct_number_but_invalid_arguments" executed="True" result="Success" success="True" time="0.009" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.when_getting_a_plateau_given_user_input_with_correct_number_but_invalid_arguments.an_exception_is_thrown" executed="True" result="Success" success="True" time="0.007" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="when_getting_a_plateau_given_user_input_with_wrong_number_of_enough_arguments" executed="True" result="Success" success="True" time="0.009" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.when_getting_a_plateau_given_user_input_with_wrong_number_of_enough_arguments.an_exception_is_thrown" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="when_getting_a_plateau_given_valid_user_input" executed="True" result="Success" success="True" time="0.008" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.when_getting_a_plateau_given_valid_user_input.a_plateau_of_correct_width_and_height_is_returned" executed="True" result="Success" success="True" time="0.003" asserts="2" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="when_getting_a_rover_given_user_input_with_correct_number_but_invalid_arguments" executed="True" result="Success" success="True" time="0.012" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.when_getting_a_rover_given_user_input_with_correct_number_but_invalid_arguments.an_execption_is_thrown" executed="True" result="Success" success="True" time="0.005" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="when_getting_a_rover_given_user_input_with_wrong_number_of_arguments" executed="True" result="Success" success="True" time="0.005" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.when_getting_a_rover_given_user_input_with_wrong_number_of_arguments.an_exception_is_thrown" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="when_getting_a_rover_given_valid_user_input" executed="True" result="Success" success="True" time="0.005" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.when_getting_a_rover_given_valid_user_input.a_rover_with_correct_coordinates_and_cardinal_is_returned" executed="True" result="Success" success="True" time="0.002" asserts="3" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="when_getting_an_instruction_given_invalid_user_input" executed="True" result="Success" success="True" time="0.008" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.when_getting_an_instruction_given_invalid_user_input.an_exception_is_thrown" executed="True" result="Success" success="True" time="0.007" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="when_getting_an_instruction_given_valid_user_input" executed="True" result="Success" success="True" time="0.010" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.when_getting_an_instruction_given_valid_user_input.a_correct_composite_instruction_is_returned" executed="True" result="Success" success="True" time="0.005" asserts="9" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="when_getting_positionchecks" executed="True" result="Success" success="True" time="0.004" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.when_getting_positionchecks.a_correct_position_check_list_is_returned" executed="True" result="Success" success="True" time="0.002" asserts="3" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="when_move_instruction_is_executed" executed="True" result="Success" success="True" time="0.005" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.when_move_instruction_is_executed.rover_y_position_will_be_4" executed="True" result="Success" success="True" time="0.004" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="when_rover_moves_in_X_dimension" executed="True" result="Success" success="True" time="0.012" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.when_rover_moves_in_X_dimension.given_a_rover_facing_west_at_x_2_and_y_3.rover_has_an_id" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                  <test-case name="MarsRover.Tests.when_rover_moves_in_X_dimension.rover_move_event_is_raised" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="when_rover_moves_in_Y_dimension" executed="True" result="Success" success="True" time="0.011" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.when_rover_moves_in_Y_dimension.given_a_rover_facing_west_at_x_2_and_y_3.rover_has_an_id" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="MarsRover.Tests.when_rover_moves_in_Y_dimension.rover_move_event_is_raised" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="when_turn_left_instruction_is_executed" executed="True" result="Success" success="True" time="0.006" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.when_turn_left_instruction_is_executed.rover_cardinal_will_be_West" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="when_turn_right_instruction_is_executed" executed="True" result="Success" success="True" time="0.003" asserts="0">
                <results>
                  <test-case name="MarsRover.Tests.when_turn_right_instruction_is_executed.rover_cardinal_will_be_East" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>